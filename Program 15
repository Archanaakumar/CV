import cv2
import numpy as np

image = cv2.imread(r"C:\Users\Archanaa\Downloads\doggy.jpg")

if image is None:
    print("Error: Could not load image.")
    exit()

pts_src = np.array([[100, 100], [400, 100], [100, 400], [400, 400]], dtype=np.float32)
pts_dst = np.array([[0, 0], [300, 0], [0, 300], [300, 300]], dtype=np.float32)

def compute_homography_dlt(src_pts, dst_pts):
    A = []
    for i in range(4):
        x, y = src_pts[i][0], src_pts[i][1]
        u, v = dst_pts[i][0], dst_pts[i][1]
        A.append([-x, -y, -1,  0,  0,  0, x*u, y*u, u])
        A.append([ 0,  0,  0, -x, -y, -1, x*v, y*v, v])
    A = np.array(A)

    U, S, Vt = np.linalg.svd(A)
    h = Vt[-1, :] / Vt[-1, -1]  
    H = h.reshape(3, 3)
    return H

H_dlt = compute_homography_dlt(pts_src, pts_dst)

warped_image = cv2.warpPerspective(image, H_dlt, (300, 300))

cv2.imshow("Original Image", image)
cv2.imshow("DLT Transformed Image", warped_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
